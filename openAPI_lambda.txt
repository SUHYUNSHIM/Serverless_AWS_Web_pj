from urllib.request import Request, urlopen
from urllib.parse import urlencode, quote_plus, unquote
from botocore.vendored import requests 
import xmltodict
import json

from datetime import datetime
import boto3
from boto3.dynamodb.conditions import Key, Attr

#query문. 
def get_request_query(url, operation, params, serviceKey):
    import urllib.parse as urlparse
    params = urlparse.urlencode(params)
    request_query = url + '/' + operation + '?' + params + '&' + 'serviceKey' + '=' + serviceKey
    return request_query

def lambda_handler(event, context):
    
    bucket = 'starsdogbucket' #S3버킷이름
    #s3 = boto3.client("s3")
    
    #file_obj = s3.get_object(Bucket=bucket, Key='sub/dog_name.txt')
    #dog_name = file_obj["Body"].read().decode("utf-8")
    
    # 요청 URL과 오퍼레이션
    URL = 'http://openapi.animal.go.kr/openapi/service/rest/abandonmentPublicSrvc'
    # 파라미터
    SERVICEKEY = '9arJX1LMN1qodyehGW%2FUvqD0CGVdEXuNYt0ziiFKYTo9wURtceTYB3BrUd%2B%2FsvytNiHfEPDii5RYeRRuOLUVAA%3D%3D'
   
    #test 결과값으로 대입되는 변수
    dogName = '비글'
    
    sido = '서울특별시' #위치를 사용자에게 어떻게 입력받을 것인가? 아니면 GPS로 현재 위치를 받아올 것인가.
    
    # 견종 가져오기
    PARAMS = {'up_kind_cd': '417000'}
    OPERATION = 'kind'
    request_query = get_request_query(URL, OPERATION, PARAMS, SERVICEKEY)
    response = requests.get(url=request_query)
    
    dict_type = xmltodict.parse(response.content)
    json_type = json.dumps(dict_type)
    dict2_type = json.loads(json_type)
    
    body = dict2_type['response']['body']
    items = body['items']
    
    boolean = False
    for item in items["item"]:
        if item['KNm'] == dogName:
            boolean = True
            kind = item['kindCd']
        
        #print(item)
    
    if boolean == False:
        kind = '000114'     #매칭되는 견종이 없을 경우 믹스견과 매칭.
    
    SIDO = {'서울특별시': '6110000', '부산광역시': '6260000', '대구광역시': '6270000', '인천광역시': '6280000', '광주광역시': '6290000', '세종특별자치시': '5690000',
            '대전광역시': '6300000', '울산광역시': '6310000', '경기도': '6410000', '강원도': '6420000'}
    uprCd = SIDO[sido]
    
    #날짜 계산 식 분명 잘되었는데... 갑자기 에러남..
    #date = format(datetime.today().year) + '0' + format(datetime.today().month -1) + format(datetime.today().day)
    #PARAMS = {'bgnde': date, 'upkind': '417000', 'kind': kind, 'state': 'notice', 'upr_cd': uprCd}
   
    OPERATION = 'abandonmentPublic'  # 오퍼레이션 이름.
    PARAMS = {'upkind': '417000', 'kind': kind, 'state': 'notice', 'upr_cd': uprCd}
    request_query = get_request_query(URL, OPERATION, PARAMS, SERVICEKEY)
    response = requests.get(url=request_query)
    
    dict_type = xmltodict.parse(response.content)
    json_type = json.dumps(dict_type)
    dict2_type = json.loads(json_type)
    
    body = dict2_type['response']['body']
    items = body['items']
    
    #매칭되는 견종은 있으나 보호중인 유기견이 없을 경우.
    if items is None:
        return {
            'body': '보호중인 유기견이 없네요..'        #다음 순위의 유기견 데이터들을 가져오도록 수정해야..
        }   
  
    return {
        'body': items["item"]
    }
    
